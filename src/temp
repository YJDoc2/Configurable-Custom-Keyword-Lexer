condition:bool = {
    <c1:condition> "&&" <c2:Bool> => c1 && c2,
    <c1:condition> "||" <c2:Bool> => c1 || c2,
    Bool
}


Bool:bool = {
    <n1:num> "<" <n2:num> => n1<n2,
    <n1:num> ">" <n2:num> => n1>n2,
    <n1:num> "<=" <n2:num> => n1<=n2,
    <n1:num> ">=" <n2:num> => n1>=n2,
    <n1:num> "!=" <n2:num> => n1!=n2,
    <n1:num> "==" <n2:num> => n1-n2 < 0.0000000001,
}



if_stmt:() = {
    IfStart <ifa1:IfAux1?> "(" <c:condition> ")" <ifa2:IfAux2?> =>{
        if !lc.is_optional(IfAux1) && ifa1.is_none(){
            panic!("Error, if aux 1 required");
        }
        if !lc.is_optional(IfAux2) && ifa2.is_none(){
            panic!("Error, if aux 2 required");
        }
        
    }
}

pub else_stmt:() = {
    ElseStart <ea1:ElseAux1?> if_stmt => {
        if !lc.is_optional(ElseAux1) && ea1.is_none(){
            panic!("Error, else aux 1 required");
        }
    },
    ElseStart <ea1:ElseAux1?> block =>{
        if !lc.is_optional(ElseAux1) && ea1.is_none(){
            panic!("Error, else aux 1 required");
        }
    }
}

pub block: () = {
    "{" stmts "}"
}